version: "3.7"
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: challenge1mA!
      POSTGRES_DB: challenge
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8888:80"
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
    networks:
      - backend
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - backend
    depends_on:
      - postgres

  transactions-service:
    container_name: transactions-service
    build:
      context: .
      dockerfile: packages/transactions-service/Dockerfile.dev
    ports:
      - 4000:4000
    restart: always
    depends_on:
      - postgres
    environment:
      KAFKA_BROKER: "kafka:9092"
      TRANSACTION_KAFKA_GROUP_ID: "transaction-group"
      TRANSACTION_KAFKA_TOPIC: "transactions.v1"
      DB_HOST: "postgres"
      DB_NAME: "challenge"
      DB_USER: root
      DB_PASSWORD: challenge1mA!
    volumes:
      - "./:/app"
    networks:
      - backend

  antifraud-service:
    container_name: antifraud-service
    build:
      context: .
      dockerfile: packages/antifraud-service/Dockerfile.dev
    restart: always
    depends_on:
      - postgres
    environment:
      KAFKA_BROKER: "kafka:9092"
      TRANSACTION_KAFKA_GROUP_ID: "transaction-group"
      TRANSACTION_KAFKA_TOPIC: "transactions.v1"
    volumes:
      - "./:/app"
    networks:
      - backend

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    networks:
      - backend

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    networks:
      - backend
    depends_on:
      - kafka

networks:
  backend:
    driver: bridge
volumes:
  postgres_data:
  pgadmin-data:
